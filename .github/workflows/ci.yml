name: CI

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: "45 13 * * *"  # Every day at 15:45 Prague (13:45 UTC)

permissions:
  contents: write

jobs:
  scrape:
    runs-on: ubuntu-latest
    container:
      image: rocker/r2u:24.04

    steps:
      - name: Install git (for checkout)
        run: |
          apt-get update
          apt-get install -y git ca-certificates

      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install R packages (binary)
        run: |
          apt-get update
          apt-get install -y \
            r-cran-tidyverse r-cran-rvest r-cran-xml2 \
            r-cran-stringr r-cran-purrr r-cran-readr \
            r-cran-fs r-cran-glue r-cran-jsonlite \
            r-cran-lubridate r-cran-curl

      - name: Run scraper
        run: Rscript scrape_oris.R

      - name: Commit & push HTML (if any)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"

          # Find only new/modified .html files
          HTML_FILES=$(git ls-files -o -m --exclude-standard | awk '/\.html$/ {print $0}')
          if [ -z "$HTML_FILES" ]; then
            echo "No HTML files changed or created."
            exit 0
          fi

          # Stage only HTML (quote each filename safely)
          printf '%s\n' "$HTML_FILES" | xargs -r -d '\n' git add --

          if git diff --cached --quiet; then
            echo "No staged HTML changes to commit."
            exit 0
          fi

          git commit -m "Publish HTML: $(date -u +'%Y-%m-%dT%H:%M:%SZ') [skip ci]"
          git pull --rebase origin "${GITHUB_REF_NAME}"
          git push origin HEAD:"${GITHUB_REF_NAME}"
